@using Entities.Concrete
@{
    ViewData["Title"] = "Softinny Task";
    List<ShippingCompany> shippingData = new List<ShippingCompany>();
    List<Category> categoryData = new List<Category>();
}


@section Header{
}

    <div id="root">
        <form method="post" action="/Home/AddProduct">

            <div class="container mt-5">
                <div class="row d-flex justify-content-center productRow my-5" data-row-id="1">
                    <div class="col-md-8 mb-3">
                        <label> Ürün Adı</label>
                        <div class="form-group">
                            <input type="text" name="ProductNames[]" placeholder="Ürün Adı Giriniz" class="form-control" required />

                        </div>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label> Alış Fiyatı </label>
                        <div class="form-group">
                            <input type="text" name="PurchasePrices[]" placeholder="123.123" class="form-control" required />

                        </div>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label> Satış Fiyatı </label>
                        <div class="form-group">
                            <input type="text" name="SalePrices[]" placeholder="123.123" class="form-control" required />
                        </div>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label> Ürün Açıklaması </label>
                        <div class="form-group">
                            <textarea name="Descriptions[]" placeholder="Aracın değişeni yoktur. Sadece 5 taklalıdır." class="form-control" required></textarea>
                        </div>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label> Stok Adeti </label>
                        <div class="form-group">
                            <input type="text" name="Stocks[]" placeholder="123" class="form-control" required />
                        </div>
                    </div>
                    <div class="col-md-8 mb-3 cargoCompanies">
                        <label> Kargo Şirketi </label>
                        <div class="form-group">
                            <select placeholder="Kargo Şirketi Seçiniz." name="CargoCompanyIds[]" class="form-control selectBoxForShipping" data-row-id="1" required></select>
                        </div>
                    </div>
                    <div class="col-md-8 mb-3 categories">
                        <label> Kategori </label>
                        <div class="form-group">
                            <select placeholder="Kategori Seçiniz." name="CategoryIds[]" class="form-control selectBoxForCategory" data-row-id="1" required></select>
                        </div>
                    </div>

                    <div class="btn btn-outline-danger deleteRow" style="display:none" data-row-id="1">
                        Satır Sil
                    </div>

                    <hr />
                </div>
                @*Add Product and New Line Buttons*@
                <div class="row  d-flex justify-content-end">
                    <div class="col-md-4">
                        <div class="form-group">
                            <button type="submit" class="btn btn-outline-primary submit" id="submit">
                                Kaydet
                            </button>
                            <div class="btn btn-outline-warning addRow">
                                Satır Ekle
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </form>
    </div>

    @section Scripts{
    <script>

        function select2Prepare(selectBoxClass,controllerMethodName) {
            $(selectBoxClass).select2({
                ajax: {
                    url: controllerMethodName,
                    type: "get",
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return {
                            searchWord: params.term
                        }
                    },
                    processResults: function(response) {

                        var result = $.map(response, function(item) {

                            return {
                                id: item.id,
                                text: item.name
                            };
                        })
                        return {
                            results: result
                        }
                    },
                    cache: true
                }
            });
        }

        var dataRowId = 1;

        $(document).ready(function() {
            select2Prepare(".selectBoxForShipping","/Home/GetShippingCompanies")
            select2Prepare(".selectBoxForCategory","/Home/GetCategories")
        })



        $(".addRow").on('click', function() {
            dataRowId++;
            var productRow = $(".productRow[data-row-id='1']");
            var items = productRow.find("input, select,textarea")
            var labels = productRow.find("label");

            var component = "";
            component += '<div class="row d-flex justify-content-center productRow my-5" data-row-id="' + dataRowId + '">';
            $.each(items, function(k, i) {
                $(i).attr("data-row-id", dataRowId);
                component += '<div class="col-md-8 mb-3">' +
                    labels[k].outerHTML +
                    '<div class="form-group">' +
                    i.outerHTML +
                    '</div>' +
                    '</div>';
            })
            component += '<div class="btn btn-outline-danger deleteRow" data-row-id="'+dataRowId+'">' +
                'Satır Sil' +
                '</div>';
            component+='<hr>'
            component += '</div>';
            
            $(".productRow").last().after(component);
            addDeleteRowFunction(".deleteRow[data-row-id='"+dataRowId+"']");
            $(".productRow").last().find(".selectBoxForShipping").val(null).trigger('change');
            $(".productRow").last().find(".selectBoxForCategory").val(null).trigger('change');

            select2Prepare(".selectBoxForShipping","/Home/GetShippingCompanies")
            select2Prepare(".selectBoxForShipping","/Home/GetShippingCompanies")
            select2Prepare(".selectBoxForCategory","/Home/GetCategories")
            select2Prepare(".selectBoxForCategory","/Home/GetCategories")

        });

        $(".deleteRow").on('click', function() {
            var currentRow = $(this).attr("data-row-id");
            console.log(currentRow);
            var productRow = $(".productRow[data-row-id='" + currentRow + "']");
            productRow.remove();
        })

        function addDeleteRowFunction(thiss) {
            $(thiss).on('click', function() {
                var currentRow = $(thiss).attr("data-row-id");
                var productRow = $(".productRow[data-row-id='" + currentRow + "']");
                productRow.remove();
            })
        }




    </script>
}